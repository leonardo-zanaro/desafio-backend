<?xml version="1.0"?>
<doc>
    <assembly>
        <name>API</name>
    </assembly>
    <members>
        <member name="M:API.Controllers.AuthController.Login(Application.DTOs.UserInfo.Login)">
            <summary>
            Logs in a user with the provided username and password.
            </summary>
            <param name="userInfo">The login information containing the username and password.</param>
            <returns>Returns a UserToken object containing the generated token and its expiration date. Returns a BadRequest response if the login is invalid.</returns>
        </member>
        <member name="M:API.Controllers.AuthController.CreateUser(Application.DTOs.UserInfo.Register)">
            <summary>
            Creates a new user with the provided registration information.
            </summary>
            <param name="model">The registration information containing the new user's username, password, email, and admin status.</param>
            <returns>Returns a UserToken object containing the generated token and its expiration date if the user registration is successful. Returns a BadRequest response if the registration fails.</returns>
        </member>
        <member name="M:API.Controllers.AuthController.BuildToken(Application.DTOs.UserInfo.Login)">
            <summary>
            Builds a token for the provided user login information.
            </summary>
            <param name="userInfo">The user login information containing the username and password.</param>
            <returns>Returns a UserToken object containing the generated token and its expiration date. Returns null if the user is not found or an error occurs during token generation.</returns>
        </member>
        <member name="M:API.Controllers.AuthController.GenerateClaims(Domain.Entities.User)">
            <summary>
            Generates a ClaimsIdentity for a User object.
            </summary>
            <param name="user">The User object for which to generate the ClaimsIdentity.</param>
            <returns>The ClaimsIdentity object containing the user's claims.</returns>
        </member>
        <member name="M:API.Controllers.DelivererController.CreateDeliverer(Application.DTOs.DelivererDTO)">
            <summary>
            Creates a deliverer in the system.
            </summary>
            <param name="model">The deliverer data.</param>
            <returns>
            Returns an IActionResult representing the result of the create operation.
            If the create operation is successful, the IActionResult will contain the created deliverer object.
            If there is an error during the create operation, the IActionResult will contain a BadRequest result with an error message.
            </returns>
        </member>
        <member name="M:API.Controllers.DelivererController.UploadDocument(Microsoft.AspNetCore.Http.IFormFile,System.Guid)">
            <summary>
            Uploads a document for a deliverer.
            </summary>
            <param name="file">The document file to upload.</param>
            <param name="delivererId">The ID of the deliverer.</param>
            <returns>
            Returns an IActionResult representing the result of the upload operation.
            If the upload is successful, the IActionResult will contain a message indicating the file has been uploaded successfully.
            If there is an error during the upload, the IActionResult will contain a BadRequest result with an error message.
            </returns>
        </member>
        <member name="M:API.Controllers.MotorcycleController.CreateMotorcycle(Application.DTOs.MotorcycleDTO)">
            <summary>
            Creates a new motorcycle.
            </summary>
            <param name="model">The MotorcycleDTO object containing the details of the motorcycle.</param>
            <returns>The IActionResult representing the result of the operation.</returns>
        </member>
        <member name="M:API.Controllers.MotorcycleController.GetAll(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Retrieves all motorcycles.
            </summary>
            <returns>The IActionResult representing the result of the operation.</returns>
        </member>
        <member name="M:API.Controllers.MotorcycleController.GetByPlate(System.String)">
            <summary>
            Retrieves a motorcycle by its license plate.
            </summary>
            <param name="plate">The license plate of the motorcycle to retrieve.</param>
            <returns>The IActionResult representing the result of the operation.</returns>
        </member>
        <member name="M:API.Controllers.MotorcycleController.ChangePlate(System.Guid,System.String)">
            <summary>
            Changes the license plate of a motorcycle.
            </summary>
            <param name="motorcycleId">The ID of the motorcycle.</param>
            <param name="newPlate">The new license plate.</param>
            <returns>The IActionResult representing the result of the operation.</returns>
        </member>
        <member name="M:API.Controllers.MotorcycleController.RemoveMotorcycle(System.Guid)">
            <summary>
            Removes a motorcycle from the system.
            </summary>
            <param name="motorcycleId">The unique identifier of the motorcycle to be removed.</param>
            <returns>The IActionResult representing the result of the operation.</returns>
        </member>
        <member name="M:API.Controllers.NotificationController.GetAllNotifications(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Retrieves all notifications.
            </summary>
            <param name="pageNumber">The page number of the notifications to retrieve.</param>
            <param name="pageQuantity">The quantity of notifications per page.</param>
            <returns>
            The collection of notifications.
            </returns>
        </member>
        <member name="M:API.Controllers.NotificationController.GetNotificationByOrder(System.Guid)">
            <summary>
            Retrieves notifications by order.
            </summary>
            <param name="orderId">The ID of the order to retrieve notifications for.</param>
            <returns>
            The collection of notifications.
            </returns>
        </member>
        <member name="M:API.Controllers.NotificationController.ConsumeNotifications">
            <summary>
            Consumes notifications.
            </summary>
            <returns>
            Returns an IActionResult.
            </returns>
        </member>
        <member name="M:API.Controllers.OrderController.CreateOrder(System.Decimal)">
            <summary>
            Creates a new order with the specified price.
            </summary>
            <param name="price">The price of the order.</param>
            <returns>Returns an IActionResult representing the result of the operation.</returns>
        </member>
        <member name="M:API.Controllers.OrderController.AcceptOrder(System.Guid,System.Guid)">
            <summary>
            Accepts an order with the specified order and deliverer IDs.
            </summary>
            <param name="orderId">The ID of the order to accept.</param>
            <param name="delivererId">The ID of the deliverer accepting the order.</param>
            <returns>Returns an IActionResult representing the result of the operation.</returns>
        </member>
        <member name="M:API.Controllers.OrderController.OrderDelivery(System.Guid,System.Guid)">
            <summary>
            Delivers an order with the specified order and deliverer IDs.
            </summary>
            <param name="orderId">The ID of the order to deliver.</param>
            <param name="delivererId">The ID of the deliverer delivering the order.</param>
            <returns>Returns an IActionResult representing the result of the operation.</returns>
        </member>
    </members>
</doc>
